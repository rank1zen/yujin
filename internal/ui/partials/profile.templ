package partials

import "github.com/rank1zen/yujin/internal/database"
import "fmt"
import "github.com/rank1zen/yujin/internal/ui/components"

templ ProfileMatchSkeleton() {
	<div class="bg-neutral-50 size-full animate-pulse"></div>
}

templ ProfileMatch(m database.ProfileMatch) {
	<tr>
		<td class="pr-2">
			<div class="grid grid-flow-col grid-cols-[repeat(5,1.4rem)] gap-0.5 grid-rows-[repeat(2,1.4rem)]">
				@components.SummonerChampionGrid(m.ChampionIcon, m.SummonersIcons, m.RunePrimaryIcon, m.RuneSecondaryIcon)
			</div>
		</td>
		<td class="py-1 pr-2">
			<div class="flex flex-col leading-none">
				<div>{m.KillDeathAssist}</div>
				<div class="text-xs">{ m.KillParticipation }</div>
			</div>
		</td>
		<td class="py-1 pr-2">
			<div class="flex flex-col leading-none">
				<div>{ m.CreepScore }</div>
				<div class="text-xs">{ m.CreepScorePer10 }</div>
			</div>
		</td>
		<td class="py-1 pr-2">
			<div class="flex flex-col leading-none">
				<div>{ m.DamageDone }</div>
				<div class="text-xs">{ m.DamagePercentage }</div>
			</div>
		</td>
		<td class="py-1 pr-2">
			<div class="flex flex-col leading-none">
				<div>{ m.GoldEarned }</div>
				<div class="text-xs">{ m.GoldPercentage }</div>
			</div>
		</td>
		<td class="py-1 pr-2">{ m.VisionScore }</td>
		<td class="py-1 pr-2">
			<div class="w-[4.5rem] h-auto">
				@components.SummonerItemsGrid(m.ItemIcons)
			</div>
		</td>
		<td class="py-1 pr-2">{ m.GameDuration }</td>
		<td class="py-1 pr-2">{ m.GameDate }</td>
	</tr>
}

templ ProfileMatchListSkeleton() {
	<div class="flex flex-col gap-y-3">
		for range 15 {
			@ProfileMatchSkeleton()
		}
	</div>
}

templ ProfileMatchList(m database.ProfileMatchList) {
	if len(m) == 0 {
		<div class="font-bold p-4">
			No more matches
		</div>
	} else {
		for i := range len(m) {
			@ProfileMatch(m[i])
		}
	}
}

templ ProfileMatchListPartial(puuid string) {
	<div x-data="{ loading: false, page: 0, get next() { return ++this.page; } }">
		<table class="text-left w-full">
			<thead>
				<tr class="sticky">
					<th>Champion</th>
					<th>KDA</th>
					<th>CS</th>
					<th>Damage</th>
					<th>Gold</th>
					<th>Vision</th>
					<th>Items</th>
					<th>End</th>
					<th>Date</th>
				</tr>
			</thead>
			<tbody hx-get={ "/profile/" + puuid + "/matchlist" } hx-trigger="load">
				@ProfileMatchListSkeleton()
			</tbody>
		</table>
		<div x-show="loading" class="loading">
			Loading more items...
		</div>
		<button
			x-on:click="loading = true"
			hx-get={ fmt.Sprintf("/profile/%s/matchlist", puuid) }
			hx-trigger="click"
			hx-swap="beforeend"
			hx-vals="js:{page: next()}"
			hx-on="htmx:afterRequest: window.setTimeout(() => { loading = false }, 1000)"
		>
			Fetch More
		</button>
	</div>
}

templ ProfileMatchListError() {
	<div>Error fetching matchlist.</div>
}

templ ProfileLiveGameSkeleton() {
	<div class="bg-neutral-50 size-full animate-pulse"></div>
}

templ ProfileLiveGameParticipant(m database.ProfileLiveGameParticipant) {
	<tr>
		<td>
			@components.SummonerChampionGrid(m.ChampionIcon, m.SummonersIcons, m.RunePrimaryIcon, m.RuneSecondaryIcon)
		</td>
		<td>{ m.SummonerName } </td>
		<td>{ m.Rank }</td>
		<td>{ m.WinLoss } * { m.WinLossRatio }%</td>
	</tr>
}

templ ProfileLiveGame(m database.ProfileLiveGame) {
	<h2>Blue Side</h2>
	<table class="w-full text-left">
		<thead>
			<tr>
				<th>Champion</th>
				<th>Summoner</th>
				<th>Rank</th>
				<th>Win/Loss</th>
			</tr>
		</thead>
		<tbody>
			for i := range 5 {
				@ProfileLiveGameParticipant(m.BlueSide[i])
			}
		</tbody>
	</table>
	<h2>Red Side</h2>
	<table class="w-full text-left">
		<thead>
			<tr>
				<th>Champion</th>
				<th>Summoner</th>
				<th>Rank</th>
				<th>Win/Loss</th>
			</tr>
		</thead>
		<tbody>
			for i := range 5 {
				@ProfileLiveGameParticipant(m.RedSide[i])
			}
		</tbody>
	</table>
	<div>
		<h3>Bans</h3>
	</div>
}

templ ProfileLiveGamePartial(puuid string) {
	<div
		hx-get={ fmt.Sprintf("/profile/%s/live", puuid) }
		hx-trigger="load"
	>
		@ProfileLiveGameSkeleton()
	</div>
}

templ ProfileLiveGameNotFoundError() {
	<div>Summoner currently not in game.</div>
}

templ ProfileLiveGameError() {
	<div>Error fetching live game.</div>
}
