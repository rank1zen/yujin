package partial

import "github.com/rank1zen/yujin/internal/riot"
import "github.com/rank1zen/yujin/internal/database"
import "github.com/rank1zen/yujin/internal/ui/comp"

func genMatchListQuery(puuid riot.PUUID, page int) string {
	return fmt.Sprintf("/profile/%s/matchlist?page=%d", puuid, page)
}

templ ProfileMatchListSkeleton() {
	<div class="flex flex-col gap-y-3">
		for range 15 {
			<div class="bg-neutral-50 size-full animate-pulse"></div>
		}
	</div>
}

templ ProfileMatchList(m database.ProfileMatchList) {
	for i, n := range m.List {
		<tr
			if m.HasMore && i == 0 {
				hx-get={ genMatchListQuery(m.Puuid, m.Page+1) }
				hx-trigger="intersect once"
			}
		>
			@comp.ChampionGrid(n.Champion, n.Summoners, n.Runes)
			@comp.Entry(kda(n.KdaKills, n.KdaDeaths, n.KdaAssists), per(n.KdaParticipation))
			@comp.Entry(raw(n.CsRaw), per(n.CsPer10))
			@comp.Entry(raw(n.DmgRaw), per(n.DmgPercentageTeam))
			@comp.Entry(raw(n.GoldRaw), per(n.GoldPercentageTeam))
			@comp.Entry(raw(n.VisRaw))
			@comp.ItemsGrid(n.Items)
			@comp.Entry(date(n.GameDate))
		</tr>
	}
	if !m.HasMore {
		@comp.Last()
	}
}

templ ProfileMatchListPartial(puuid riot.PUUID) {
	<table class="text-left w-full">
		@comp.Head("Champion", "KDA", "CS", "Damage", "Gold", "Vision", "Items", "Delta")
		<tbody
			hx-get={ genMatchListQuery(puuid, 0) }
			hx-trigger="revealed once"
			hx-swap-oob="beforeend:#table tbody"
		>
			@ProfileMatchListSkeleton()
		</tbody>
	</table>
}

templ ProfileMatchListError() {
	<div>Error fetching matchlist.</div>
}

