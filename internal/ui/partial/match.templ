package partial

import "github.com/rank1zen/yujin/internal/ui/components"
import "github.com/rank1zen/yujin/internal/database"
import "fmt"

templ ProfileMatchSummaryPostGameSkeleton() {
	<div class="animate-pulse grid grid-flow-col grid-cols-[repeat(21,1.2rem)] grid-rows-[repeat(2,1.2rem)] gap-0.5">
		@components.SummonerChampionGridSkeleton()
		@components.SummonerRunesGridSkeleton()
		<div class="col-span-4 row-span-2 rounded"></div>
		<div class="col-span-3 row-span-2 rounded"></div>
		<div class="col-span-3 row-span-2 rounded bg-gray-50 shadow"></div>
		<div class="col-span-3 row-span-2 rounded bg-gray-50 shadow"></div>
		@components.SummonerItemsGridSkeleton()
	</div>
}

templ ProfileMatchSummaryPostGame(m database.ProfileMatchSummaryPostGame) {
	<div class="grid grid-cols-[repeat(21,1.2rem)] grid-rows-[repeat(2,1.2rem)] grid-flow-col gap-[0.1rem]">
		// @components.SummonerChampionGrid(m.ChampionIconUrl, m.SpellIds[0], m.SpellIds[1])
		<div class="row-span-2 col-span-4 flex flex-col justify-center tracking-tight">
			<div class="truncate text-sm font-bold w-full leading-tight">{ m.Name }</div>
			<div class="truncate text-xs w-full">{ m.Rank }</div>
		</div>
		<div class="row-span-2 col-span-3 flex items-center justify-center tracking-tight">
			<div class="truncate text-sm">{ m.Kills } / { m.Deaths } / { m.Assists }</div>
		</div>
		<div class="row-span-2 col-span-3 flex items-center justify-center tracking-tight">
			<div class="truncate text-sm">{ m.CreepScore } ({ m.CsPer10 })</div>
		</div>
		<div class="row-span-2 col-span-3 flex items-center justify-center tracking-tight">
			<div class="truncate text-sm">{ m.Damage }</div>
		</div>
		@components.SummonerItemsGrid(m.ItemIds)
	</div>
}

templ ProfileMatchSummarySkeleton() {
	<div class="flex flex-col">
		Here here
		<div class="flex mt-3"></div>
		<div class="mt-3 gap-y-2 flex flex-col">
			@ProfileMatchSummaryPostGameSkeleton()
			@ProfileMatchSummaryPostGameSkeleton()
			@ProfileMatchSummaryPostGameSkeleton()
			@ProfileMatchSummaryPostGameSkeleton()
			@ProfileMatchSummaryPostGameSkeleton()
		</div>
		<div class="mt-6 gap-y-2 flex flex-col">
			@ProfileMatchSummaryPostGameSkeleton()
			@ProfileMatchSummaryPostGameSkeleton()
			@ProfileMatchSummaryPostGameSkeleton()
			@ProfileMatchSummaryPostGameSkeleton()
			@ProfileMatchSummaryPostGameSkeleton()
		</div>
	</div>
}

templ ProfileMatchSummary(m database.ProfileMatchSummary) {
	<div class="flex flex-col border-b-2">
		<div class="tracking-tight mt-3">
			<div class="flex">
				<div class="flex items-center group">
					<div class="font-bold">{ m.MatchId }</div>
					<div class="size-4 ml-1">
						@components.HoverArrowRight()
					</div>
				</div>
			</div>
			<div>
				{ m.GameDuration }<span class="mx-1">•</span>{ m.GamePatch }<span class="mx-1">•</span>{ m.GameDate }
			</div>
		</div>
		<div class="mt-4 flex flex-col">
			<div class="gap-y-2 flex flex-col">
				for i := range 5 {
					@ProfileMatchSummaryPostGame(m.BlueSide[i])
				}
			</div>
			<div class="mt-6 gap-y-2 flex flex-col">
				for i := range 5 {
					@ProfileMatchSummaryPostGame(m.RedSide[i])
				}
			</div>
		</div>
		<div class="flex my-2">
			<div class="flex items-center group">
				<div class="font-bold">Hide</div>
				<div class="size-4 ml-1">
					@components.HoverArrowUp()
				</div>
			</div>
		</div>
	</div>
}

templ ProfileMatchSummaryPartial(name, matchID string) {
	<div
		hx-get={ fmt.Sprintf("/profile/%s/matchlist/%s", name, matchID) }
		hx-swap="outerHTML"
		class="flex bg-white overflow-hidden group"
	>
		@ProfileMatchSummarySkeleton()
	</div>
}

templ ProfileMatchSummaryError() {
	<div>Error fetching match summary.</div>
}
