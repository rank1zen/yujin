package components

templ HoverArrowRight() {
	<svg
		xmlns="http://www.w3.org/2000/svg"
		viewBox="0 0 24 24"
		stroke-linecap="round"
		stroke-linejoin="round"
		class="group fill-none stroke-current stroke-2 transition-all"
	>
		<line x1="5" y1="12" x2="19" y2="12" class="translate-x-[15px] scale-x-0 transition-transform group-hover:translate-x-0 group-hover:scale-x-100"></line>
		<polyline points="12 5 19 12 12 19" class="-translate-x-1 transition-transform group-hover:translate-x-0"></polyline>
	</svg>
}

templ H1(h string, s ...string) {
	<div class="flex flex-col">
		<h1 class="font-bold mt-8">{ h }</h1>
		<div class="flex gap-1 text-sm">
			for _, sub := range s {
				<div class="rounded-sm bg-gray-200 px-0.5">{ sub }</div>
			}
		</div>
	</div>
}

templ H2(h string, s ...string) {
	<div class="flex flex-col">
		<h2 class="font-bold mt-8">{ h }</h2>
		<div class="flex gap-1 text-sm">
			for _, sub := range s {
				<div class="rounded-sm bg-gray-200 px-0.5">{ sub }</div>
			}
		</div>
	</div>
}

templ H3(h string, s ...string) {
	<div class="flex flex-col">
		<h3 class="font-bold mt-8">{ h }</h3>
		<div class="flex gap-1 text-sm">
			for _, sub := range s {
				<div class="rounded-sm bg-gray-200 px-0.5">{ sub }</div>
			}
		</div>
	</div>
}

templ E(h string, s ...string) {
	<div class="flex flex-col">
		<div class="">{ h }</div>
		<div class="flex gap-1 text-sm">
			for _, sub := range s {
				<div class="rounded-sm bg-gray-200 px-0.5">{ sub }</div>
			}
		</div>
	</div>
}

templ THead(s ...string) {
	<thead>
		<tr class="sticky">
			for _, t := range s {
				<th>{ t }</th>
			}
		</tr>
	</thead>
}

templ TLast() {
	<div>This is the end of the table</div>
}

templ BannedChampions(icons [5]*string) {
	<div>
		for _, icon := range icons {
			<div class="size-10">
				if icon == nil {
					<div class="bg-black"></div>
				} else {
					<img src={ *icon } class="size-full"/>
				}
			</div>
		}
	</div>
}

templ Champion(championIcon string) {
	<div class="overflow-hidden rounded-sm">
		<img class="scale-[1.135] size-full object-cover" src={ championIcon }/>
	</div>
}

templ ChampionGrid(championIcon string, summsIcons [2]string, runePrimaryIcon, runeSecondaryIcon string) {
	<div class="grid grid-cols-5 grid-rows-2 gap-0.5 w-[4.5rem] h-auto grid-flow-col">
		<div class="col-span-2 row-span-2 overflow-hidden rounded-sm">
			<img class="scale-[1.135] size-full object-cover" src={ championIcon }/>
		</div>
		<img class="rounded-sm" src={ summsIcons[0] }/>
		<img class="rounded-sm" src={ summsIcons[1] }/>
		<div class="grid col-span-2 row-span-2 grid-cols-subgrid grid-rows-subgrid bg-white">
			<div class="col-start-1 row-start-1 col-span-2 row-span-2">
				<img src={ runePrimaryIcon } class="size-full"/>
			</div>
			<div class="col-start-2 row-start-2 z-10 p-1 bg-white rounded-full overflow-hidden shadow">
				<img src={ runeSecondaryIcon } class="size-full"/>
			</div>
		</div>
	</div>
}

templ ItemsGrid(icons [7]*string) {
	<div class="grid grid-cols-3 grid-rows-2 gap-0.5">
		for i := range 6 {
			if icons[i] == nil {
				<div class="aspect-square object-cover bg-neutral-900 size-full rounded-sm"></div>
			} else {
				<div class="aspect-square size-full">
					<img class="object-cover size-full rounded-sm" src={ *icons[i] }/>
				</div>
			}
		}
	</div>
}
