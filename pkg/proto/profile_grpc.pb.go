// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.3
// source: proto/profile.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// SummonerProfileClient is the client API for SummonerProfile service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SummonerProfileClient interface {
	GetSummoner(ctx context.Context, in *GetSummonerRequest, opts ...grpc.CallOption) (*GetSummonerResponse, error)
	UpdateAndGetSummoner(ctx context.Context, in *UpdateAndGetSummonerRequest, opts ...grpc.CallOption) (*UpdateAndGetSummonerResponse, error)
	GetRank(ctx context.Context, in *GetRankRequest, opts ...grpc.CallOption) (*GetRankResponse, error)
	UpdateAndGetRank(ctx context.Context, in *UpdateAndGetRankRequest, opts ...grpc.CallOption) (*UpdateAndGetRankResponse, error)
	GetMatchlist(ctx context.Context, in *GetMatchlistRequest, opts ...grpc.CallOption) (*GetMatchlistResponse, error)
	UpdateAndGetMatchlist(ctx context.Context, in *UpdateAndGetMatchlistRequest, opts ...grpc.CallOption) (*UpdateAndGetMatchlistResponse, error)
}

type summonerProfileClient struct {
	cc grpc.ClientConnInterface
}

func NewSummonerProfileClient(cc grpc.ClientConnInterface) SummonerProfileClient {
	return &summonerProfileClient{cc}
}

func (c *summonerProfileClient) GetSummoner(ctx context.Context, in *GetSummonerRequest, opts ...grpc.CallOption) (*GetSummonerResponse, error) {
	out := new(GetSummonerResponse)
	err := c.cc.Invoke(ctx, "/SummonerProfile/GetSummoner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *summonerProfileClient) UpdateAndGetSummoner(ctx context.Context, in *UpdateAndGetSummonerRequest, opts ...grpc.CallOption) (*UpdateAndGetSummonerResponse, error) {
	out := new(UpdateAndGetSummonerResponse)
	err := c.cc.Invoke(ctx, "/SummonerProfile/UpdateAndGetSummoner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *summonerProfileClient) GetRank(ctx context.Context, in *GetRankRequest, opts ...grpc.CallOption) (*GetRankResponse, error) {
	out := new(GetRankResponse)
	err := c.cc.Invoke(ctx, "/SummonerProfile/GetRank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *summonerProfileClient) UpdateAndGetRank(ctx context.Context, in *UpdateAndGetRankRequest, opts ...grpc.CallOption) (*UpdateAndGetRankResponse, error) {
	out := new(UpdateAndGetRankResponse)
	err := c.cc.Invoke(ctx, "/SummonerProfile/UpdateAndGetRank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *summonerProfileClient) GetMatchlist(ctx context.Context, in *GetMatchlistRequest, opts ...grpc.CallOption) (*GetMatchlistResponse, error) {
	out := new(GetMatchlistResponse)
	err := c.cc.Invoke(ctx, "/SummonerProfile/GetMatchlist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *summonerProfileClient) UpdateAndGetMatchlist(ctx context.Context, in *UpdateAndGetMatchlistRequest, opts ...grpc.CallOption) (*UpdateAndGetMatchlistResponse, error) {
	out := new(UpdateAndGetMatchlistResponse)
	err := c.cc.Invoke(ctx, "/SummonerProfile/UpdateAndGetMatchlist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SummonerProfileServer is the server API for SummonerProfile service.
// All implementations must embed UnimplementedSummonerProfileServer
// for forward compatibility
type SummonerProfileServer interface {
	GetSummoner(context.Context, *GetSummonerRequest) (*GetSummonerResponse, error)
	UpdateAndGetSummoner(context.Context, *UpdateAndGetSummonerRequest) (*UpdateAndGetSummonerResponse, error)
	GetRank(context.Context, *GetRankRequest) (*GetRankResponse, error)
	UpdateAndGetRank(context.Context, *UpdateAndGetRankRequest) (*UpdateAndGetRankResponse, error)
	GetMatchlist(context.Context, *GetMatchlistRequest) (*GetMatchlistResponse, error)
	UpdateAndGetMatchlist(context.Context, *UpdateAndGetMatchlistRequest) (*UpdateAndGetMatchlistResponse, error)
	mustEmbedUnimplementedSummonerProfileServer()
}

// UnimplementedSummonerProfileServer must be embedded to have forward compatible implementations.
type UnimplementedSummonerProfileServer struct {
}

func (UnimplementedSummonerProfileServer) GetSummoner(context.Context, *GetSummonerRequest) (*GetSummonerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSummoner not implemented")
}
func (UnimplementedSummonerProfileServer) UpdateAndGetSummoner(context.Context, *UpdateAndGetSummonerRequest) (*UpdateAndGetSummonerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAndGetSummoner not implemented")
}
func (UnimplementedSummonerProfileServer) GetRank(context.Context, *GetRankRequest) (*GetRankResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRank not implemented")
}
func (UnimplementedSummonerProfileServer) UpdateAndGetRank(context.Context, *UpdateAndGetRankRequest) (*UpdateAndGetRankResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAndGetRank not implemented")
}
func (UnimplementedSummonerProfileServer) GetMatchlist(context.Context, *GetMatchlistRequest) (*GetMatchlistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMatchlist not implemented")
}
func (UnimplementedSummonerProfileServer) UpdateAndGetMatchlist(context.Context, *UpdateAndGetMatchlistRequest) (*UpdateAndGetMatchlistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAndGetMatchlist not implemented")
}
func (UnimplementedSummonerProfileServer) mustEmbedUnimplementedSummonerProfileServer() {}

// UnsafeSummonerProfileServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SummonerProfileServer will
// result in compilation errors.
type UnsafeSummonerProfileServer interface {
	mustEmbedUnimplementedSummonerProfileServer()
}

func RegisterSummonerProfileServer(s grpc.ServiceRegistrar, srv SummonerProfileServer) {
	s.RegisterService(&SummonerProfile_ServiceDesc, srv)
}

func _SummonerProfile_GetSummoner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSummonerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SummonerProfileServer).GetSummoner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SummonerProfile/GetSummoner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SummonerProfileServer).GetSummoner(ctx, req.(*GetSummonerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SummonerProfile_UpdateAndGetSummoner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAndGetSummonerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SummonerProfileServer).UpdateAndGetSummoner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SummonerProfile/UpdateAndGetSummoner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SummonerProfileServer).UpdateAndGetSummoner(ctx, req.(*UpdateAndGetSummonerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SummonerProfile_GetRank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRankRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SummonerProfileServer).GetRank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SummonerProfile/GetRank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SummonerProfileServer).GetRank(ctx, req.(*GetRankRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SummonerProfile_UpdateAndGetRank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAndGetRankRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SummonerProfileServer).UpdateAndGetRank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SummonerProfile/UpdateAndGetRank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SummonerProfileServer).UpdateAndGetRank(ctx, req.(*UpdateAndGetRankRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SummonerProfile_GetMatchlist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMatchlistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SummonerProfileServer).GetMatchlist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SummonerProfile/GetMatchlist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SummonerProfileServer).GetMatchlist(ctx, req.(*GetMatchlistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SummonerProfile_UpdateAndGetMatchlist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAndGetMatchlistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SummonerProfileServer).UpdateAndGetMatchlist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SummonerProfile/UpdateAndGetMatchlist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SummonerProfileServer).UpdateAndGetMatchlist(ctx, req.(*UpdateAndGetMatchlistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SummonerProfile_ServiceDesc is the grpc.ServiceDesc for SummonerProfile service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SummonerProfile_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "SummonerProfile",
	HandlerType: (*SummonerProfileServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSummoner",
			Handler:    _SummonerProfile_GetSummoner_Handler,
		},
		{
			MethodName: "UpdateAndGetSummoner",
			Handler:    _SummonerProfile_UpdateAndGetSummoner_Handler,
		},
		{
			MethodName: "GetRank",
			Handler:    _SummonerProfile_GetRank_Handler,
		},
		{
			MethodName: "UpdateAndGetRank",
			Handler:    _SummonerProfile_UpdateAndGetRank_Handler,
		},
		{
			MethodName: "GetMatchlist",
			Handler:    _SummonerProfile_GetMatchlist_Handler,
		},
		{
			MethodName: "UpdateAndGetMatchlist",
			Handler:    _SummonerProfile_UpdateAndGetMatchlist_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/profile.proto",
}
